# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  # import CircleCI's aws-cli orb
  aws-cli: circleci/aws-cli@3.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    working_directory: ~/repo
    # Specify the execution environment. You can specify an image from
    # Dockerhub or use one of our Convenience Images from CircleCI's Developer
    # Hub. See:
    # https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/go:1.17.13
      # Add steps to the job
      # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run tests
          command: |
            mkdir -p /tmp/test-reports
            gotestsum --junitfile /tmp/test-reports/unit-tests.xml
      - store_test_results:
          path: /tmp/test-reports

  aws-example:
    docker:
      - image: cimg/aws:2022.06
    steps:
      # run the aws-cli/setup command from the orb
      - aws-cli/setup:
          role-arn: 'arn:aws:iam::172428475609:role/CircleCIOpenIDTest'
 
      - run:
          name: Log-into-AWS-ECR
          command: |
            # must use same profile specified in the step above
            aws ecr get-login-password
          environment:
            AWS_DEFAULT_REGION: ap-southeast-2


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample:
    jobs:
      - aws-example:
          context: aws
      - build
